var currentWinningItem,intervalId,items2={item0:{weapon:"AK-47",name:"AK-47 Gold Arabesque",skin:"Gold Arabesque",color:"red",imgDist:"../dist/img/weapons/rifles/ak-47/gold-arabesque.jpg",price:2780.22,id:50,dropPercent:1},item1:{weapon:"M4A4",name:"M4A4 Mainframe",skin:"Mainframe",color:"light-blue",imgDist:"../dist/img/weapons/rifles/m4a4/mainframe.jpg",price:.07,id:80,dropPercent:99}},spinBtn=document.querySelector(".spin"),caseItemsBox=document.querySelectorAll(".case__items"),countItemsAmount=Object.keys(items2).length,winPupup=document.querySelector(".win-popup"),sellBtn=document.querySelector(".win-popup__btn--sell"),takeBtn=document.querySelector(".win-popup__btn--take"),winningItemImg=document.querySelector(".win-popup__img"),winningItemName=document.querySelector(".win-popup__item-name"),winningItemPrice=document.querySelector(".win-popup__item-price"),winningItemBox=document.querySelector(".win-popup__container"),balanceAmount=document.querySelector(".user__balance--amount"),balanceAmountMobile=document.querySelector(".user-mobile__balance--amount"),caseAmountBtns=document.querySelectorAll(".case__button-amount"),backBtn=document.querySelector(".case__btn--back"),muteBtn=document.querySelector(".case__btn--mute"),allCases=document.querySelector(".case__allcases"),casePrice=30,casesAmount=1,winningItems=[],createInfoAboutItemsInChest=function(){var e=document.querySelector(".case__drop-box");for(i=0;i<countItemsAmount;i++){var t=document.createElement("div"),n=document.createElement("p"),a=document.createElement("img"),s=document.createElement("div"),c=document.createElement("div"),o=document.createElement("p"),m=document.createElement("p"),l=document.createElement("p");t.classList.add("case__drop"),t.classList.add(items2["item".concat(i)].color+"-drop2"),t.style.order="-"+items2["item".concat(i)].price.toFixed(0),n.classList.add("case__drop-percent"),a.classList.add("case__drop-img"),s.classList.add("case__drop-textbox"),c.classList.add("case__drop-textbox-left"),o.classList.add("case__drop-item"),m.classList.add("case__drop-skin"),m.classList.add(items2["item".concat(i)].color+"-text"),l.classList.add("case__drop-price"),a.setAttribute("src",items2["item".concat(i)].imgDist),a.setAttribute("alt",items2["item".concat(i)].name),n.textContent=items2["item".concat(i)].dropPercent+"%",o.textContent=items2["item".concat(i)].weapon,m.textContent=items2["item".concat(i)].skin,l.textContent=items2["item".concat(i)].price+"$",c.append(o,m),s.append(c,l),t.append(n,a,s),e.append(t)}},createItemsInChest=function(){document.querySelectorAll(".case__items").forEach(function(e){for(i=0;i<100;i++){var t=void 0,t=Math.floor(1e4*Math.random())<=99?0:1,n=document.createElement("div"),a=document.createElement("img"),s=document.createElement("p"),c=document.createElement("p");n.classList.add("case__item","case__item".concat(e.id)),n.classList.add(items2["item".concat(t)].color+"-drop"),n.style.border="none",n.id="item".concat(t),a.classList.add("case__img"),s.classList.add("case__item-name"),c.classList.add("case__skin-name"),c.classList.add(items2["item".concat(t)].color+"-text"),a.setAttribute("src",items2["item".concat(t)].imgDist),a.setAttribute("alt",items2["item".concat(t)].name),s.textContent=items2["item".concat(t)].weapon,c.textContent=items2["item".concat(t)].skin,n.append(a,s,c),e.append(n)}})},setBtnText=function(){parseFloat(localStorage.getItem("Balance").slice(0,-1))>=casePrice?spinBtn.textContent="open ".concat(casePrice*casesAmount,".00$"):spinBtn.textContent="add balance"},spinCase=function(){var e,t=document.querySelectorAll(".case__items");parseFloat(localStorage.getItem("Balance").slice(0,-1))>=casePrice&&"spining"!==spinBtn.textContent?(e=new Audio("../dist/audio/open.mp3"),muteBtn.classList.contains("not-muted")&&e.play(),t.forEach(function(t){var e=Math.floor(5e3*Math.random()-1e4),n=(spinBtn.textContent="spining",parseInt(localStorage.getItem("casesOpened"))+1),n=(localStorage.setItem("casesOpened",n),(parseFloat(localStorage.getItem("Balance").slice(0,-1))-casePrice).toFixed(2));localStorage.setItem("Balance",n+"$"),setBalance(),t.style.left=e+"px",t.style.transition="left 5s cubic-bezier(0,1,0.5,1)",1===casesAmount&&(intervalId=setInterval(function(){var e,n,i;e=document.querySelectorAll(".case__item"),n=null,i=1/0,e.forEach(function(e){e.firstElementChild.style.scale="1"}),e.forEach(function(e){var t=e.getBoundingClientRect().x+e.offsetWidth/2,t=Math.abs(t-redLineX);t<i&&(i=t,n=e)}),n&&(n.firstElementChild.style.scale="0.9")},100)),setTimeout(function(){clearInterval(intervalId);n=t.parentElement.children[0].getBoundingClientRect().x,e=t.querySelectorAll(".case__item"),i=null,a=1/0,e.forEach(function(e){var t=e.getBoundingClientRect().x+e.offsetWidth/2,t=Math.abs(t-n);t<a&&(a=t,i=e)});var n,i,a,e=i;e&&(winningItems.push(e),winningItemBox.classList.value="",winningItemBox.classList.add("win-popup__container","".concat(items2["".concat(e.id)].color+"-win")),winningItemImg.setAttribute("src",items2["".concat(e.id)].imgDist),winningItemImg.setAttribute("alt",items2["".concat(e.id)].name),winningItemName.textContent=items2["".concat(e.id)].name,winningItemPrice.textContent=items2["".concat(e.id)].price+"$",hideWinPopup())},5e3)})):"spining"!==spinBtn.textContent&&window.open("../diff/deposit.html","_self")},hideWinPopup=function(){1===casesAmount?winPupup.classList.toggle("hidden"):setTimeout(function(){takeWinningItem(),setBtnText()},2e3)},sellWinningItem=function(){var e=(parseFloat(localStorage.getItem("Balance").slice(0,-1))+parseFloat(winningItemPrice.textContent)).toFixed(2);localStorage.setItem("Balance",e+"$"),hideWinPopup(),refreshBalance(),resetBoxAnimation()},takeWinningItem=function(){for(i=0;i<winningItems.length;i++)null===localStorage.getItem("id"+items2["".concat(winningItems[i].id)].id)||NaN===localStorage.getItem("id"+items2["".concat(winningItems[i].id)].id)?localStorage.setItem("id"+items2["".concat(winningItems[i].id)].id,1):localStorage.setItem("id"+items2["".concat(winningItems[i].id)].id,parseInt(localStorage.getItem("id"+items2["".concat(winningItems[i].id)].id))+1);1===casesAmount&&hideWinPopup(),resetBoxAnimation()},refreshBalance=function(){balanceAmount.textContent=localStorage.getItem("Balance"),balanceAmountMobile.textContent=localStorage.getItem("Balance")},resetBoxAnimation=function(){document.querySelectorAll(".case__items").forEach(function(e){e.innerHTML="",e.style.transition="0.01s",e.style.left="0"}),winningItems=[],setBtnText(),createItemsInChest()},goBackToMainSite=function(){window.open("../index.html","_self")},muteSound=function(){muteBtn.classList.toggle("not-muted"),muteBtn.classList.contains("not-muted")?(muteBtn.lastElementChild.style.display="none",muteBtn.firstElementChild.style.display="block"):(muteBtn.lastElementChild.style.display="block",muteBtn.firstElementChild.style.display="none")},createBoxes=function(){for(i=0;i<casesAmount;i++){var e=document.createElement("div"),t=document.createElement("div"),n=document.createElement("div"),a=document.createElement("div"),s=document.createElement("div");(casesAmount%2==0||casesAmount%2!=0&&i<casesAmount-1)&&(e.style.width="45%"),e.classList.add("case__container"),e.id="caseBox".concat(i),t.classList.add("case__middle-point"),n.classList.add("case__middle-triangle"),a.classList.add("case__middle-triangle","case__middle-triangle--bottom"),s.classList.add("case__items"),s.classList.add("case__items"+[i]),s.id=i,e.append(t,n,a,s),allCases.append(e)}createItemsInChest()};function setCasesAmount(){if("spining"!==spinBtn.textContent){switch(allCases.innerHTML="",this.id){case"1Case":casesAmount=1;break;case"2Case":casesAmount=2;break;case"3Case":casesAmount=3;break;case"4Case":casesAmount=4;break;case"5Case":casesAmount=5}createBoxes(),setBtnText()}}var addEventListeners=function(){spinBtn.addEventListener("click",spinCase),takeBtn.addEventListener("click",takeWinningItem),sellBtn.addEventListener("click",sellWinningItem),backBtn.addEventListener("click",goBackToMainSite),muteBtn.addEventListener("click",muteSound),caseAmountBtns.forEach(function(e){e.addEventListener("click",setCasesAmount)})};createItemsInChest(),setBtnText(),createInfoAboutItemsInChest(),addEventListeners();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
